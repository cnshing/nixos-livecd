# Creates a release

run-name: Draft release tag ${{ inputs.tag }}

on:
  workflow_dispatch:
    inputs:
      tag: 
        description: 'The release version/tag'
        type: string
        required: true
      formats:  
        description: "A list of livecd formats to release as an artifact, using ['a', 'b', 'c'] notation"
        type: string
        required: true
        default: "['install-iso', 'virtualbox', 'proxmox-lxc', 'proxmox', 'linode', 'gce', 'docker', 'do']"
      commitish:
        description: "Passthrough from action-gh-release: 'Commitish value that determines where the Git tag is created from. Can be any branch or commit SHA. Defaults to repository default branch.'"
        required: false

permissions:
  contents: write

jobs:
  build_release:
    strategy:
      fail-fast: false
      matrix:
        formats: ${{ fromJSON(inputs.formats) }}
    uses: ./.github/workflows/build-livecd.yml
    with:
      configuration: configuration.nix
      format: ${{ matrix.formats }}
      commitish: ${{ inputs.commitish }}
  draft_release:
    needs: build_release
    if: always()
    runs-on: ubuntu-latest
    env:
      asset-path: ./assets
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ inputs.commitish }}

      - name: Retrieve the build files
        uses: actions/download-artifact@v3
        id: build-files
        with:
          path: ${{ env.asset-path }}

      - name: Assign asset filenames
        run: |
          git_hash=$(git rev-parse --short HEAD)
          cd "${{ steps.build-files.outputs.download-path }}"
          find ${{ steps.build-files.outputs.download-path }} -exec bash -c '
              filename=$(basename "$0")
              release=${filename/$git_hash/${{ inputs.tag }}}
              mv -v "$filename" "$release"
          ' {} \;

      - name: List directory
        run: ls -R "${{ steps.build-files.outputs.download-path }}"

      - name: Create the release
        uses: softprops/action-gh-release@v1
        with: 
          files: ${{ steps.build-files.outputs.download-path }}/**
          tag_name: ${{ inputs.tag }}
          draft: true
          target_commitish: ${{ inputs.commitish }}
          generate_release_notes: true
          append_body: true
      

