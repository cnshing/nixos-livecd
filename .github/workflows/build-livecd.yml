run-name: Build a ${{ inputs.format }} livecd with ${{ inputs.configuration }}

on:
  workflow_call:
    inputs:
      configuration:  
        description: 'The path or filename of the nix configuration describing the image'
        type: string
        required: true
        default: 'configuration.nix'
      format:
        description: 'The nixOS image format'
        required: true
        type: string
        default: 'install-iso'

  workflow_dispatch:
    # TODO: Once input duplication is not needed anymore, refactor the input duplicate code.
    # See https://github.com/orgs/community/discussions/39357
    inputs:
      configuration:  
        description: 'The path or filename of the nix configuration describing the image'
        type: string
        required: true
        default: 'configuration.nix'
      format:
        description: 'The nixOS image format'
        required: true
        type: choice
        options:
          - info
          - warning
          - debug
          - amazon
          - azure
          - cloudstack
          - do
          - docker
          - gce
          - hyperv
          - install-iso
          - install-iso-hyperv
          - iso
          - kexec
          - kexec-bundle
          - kubevirt
          - linode
          - lxc
          - lxc-metadata
          - openstack
          - proxmox
          - proxmox-lxc
          - qcow
          - raw
          - raw-efi
          - sd-aarch64
          - sd-aarch64-installer
          - vagrant-virtualbox
          - virtualbox
          - vm
          - vm-bootloader
          - vm-nogui
          - vmware
        default: install-iso

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Generate NixOS Image
        uses: ./.github/actions/generate-nixos-image
        with:
          configuration: ${{ inputs.configuration }}
          format: ${{ inputs.format  }}
        id: generate-image

      - name: Assign Artifact filename
        run: |
          # Get short git hash from
          # https://stackoverflow.com/questions/58886293/getting-current-branch-and-commit-hash-in-github-action
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          filename=$(basename ${{ env.image-path }})
          echo "artifact-name=${{ inputs.format }}-${git_hash}-${filename}" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact-name }}
          path: ${{ env.image-path }}
