# This is a basic workflow to help you get started with Actions

name: build-livecd

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  actions: write
  contents: read

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  job1:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    outputs:
      output1: ${{ steps.step1.outputs.test }}
      output2: ${{ steps.step2.outputs.test }}
    steps:
      - id: step1
        run: echo "test=hello" >> "$GITHUB_OUTPUT"
      - id: step2
        run: echo "test=world" >> "$GITHUB_OUTPUT"
  job2:
    runs-on: ubuntu-latest
    needs: job1
    steps:
      - env:
          OUTPUT1: ${{needs.job1.outputs.output1}}
          OUTPUT2: ${{needs.job1.outputs.output2}}
        run: echo "$OUTPUT1 $OUTPUT2"
  pre_assessment_check:
    runs-on: ubuntu-latest
    outputs:
      skippable: ${{ steps.pre-criteria-assessment.outputs.skippable }}
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Run pre criteria assessment
        uses: ./.github/actions/pre-criteria-assessment
        id: pre-criteria-assessment

      - name: Assign pre criteria assessment status
        run: |
          echo "skippable=${{ env.skippable }}" >> "$GITHUB_OUTPUT"
          echo $GITHUB_OUTPUT >> $GITHUB_STEP_SUMMARY

  # This workflow contains a single job called "build"
  build:
    needs: pre_assessment_check
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    strategy:
      matrix:
        formats: [install-iso, proxmox-lxc]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: test need
        env:
          OUTPUT1: ${{needs.pre_assessment_check.outputs.skippable}}
        run: echo $OUTPUT1

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Generate NixOS Image
        uses: ./.github/actions/generate-nixos-image
        with:
          configuration: configuration.nix
          format: ${{ matrix.formats }}
        id: generate-image

      - name: Assign Artifact filename
        run: |
          # Get short git hash from
          # https://stackoverflow.com/questions/58886293/getting-current-branch-and-commit-hash-in-github-action
          git_hash=$(git rev-parse --short "$GITHUB_SHA")
          filename=$(basename ${{ env.image-path }})
          echo "artifact-name=${{ matrix.formats }}-${git_hash}-${filename}" >> $GITHUB_ENV

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ env.artifact-name }}
          path: ${{ env.image-path }}
